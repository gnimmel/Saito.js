#ifdef GL_ES
precision highp float;
#endif

varying vec2 vTextureCoord;
varying vec4 vTransformedNormal;
varying vec3 vNormal;
varying vec4 vPosition;
varying mat4 vNormalMatrix;
varying vec3 vLightDir;
varying vec3 vEyeDir;


uniform vec3 uMaterialAmbientColor;
uniform vec3 uMaterialDiffuseColor;
uniform vec3 uMaterialSpecularColor;
uniform float uMaterialShininess;
uniform vec3 uMaterialEmissiveColor;

uniform vec3 uAmbientLightingColor;
uniform vec3 uPointLightingDiffuseColor;
uniform vec3 uPointLightingSpecularColor;

uniform samplerCube uSampler;
uniform samplerCube uSamplerBump;



void main(void) {

	vec4 textureColor = textureCube(uSampler,vNormal);
	vec4 textureColorBump = 2.0 * textureCube(uSamplerBump, vNormal) - 1.0;

	vec3 bump = normalize( textureColorBump.xyz);
	float diffuse = max( dot(vLightDir, bump), 0.0 );

	vec4 lAmbient = vec4(uAmbientLightingColor * uMaterialAmbientColor,1.0);
	
	vec4 lDiffuse = vec4(uMaterialDiffuseColor * uPointLightingDiffuseColor * diffuse, 1.0);

	float specular = pow(clamp(dot(reflect(-vLightDir.xyz, bump), normalize(vEyeDir.xyz)), 0.0, 1.0), uMaterialShininess );
	
	vec4 lSpecular = vec4(uPointLightingSpecularColor * uMaterialSpecularColor * specular, 1.0);	
	
	gl_FragColor = 	lAmbient * textureColor + lDiffuse * textureColor + lSpecular;

	

}
